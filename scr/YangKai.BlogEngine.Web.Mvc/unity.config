<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection,Microsoft.Practices.Unity.Configuration"/>
  </configSections>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension,
                    Microsoft.Practices.Unity.Interception.Configuration" />

    <!--unity实例化模式-->
    <alias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
    <alias alias="external" type="Microsoft.Practices.Unity.ExternallyControlledLifetimeManager, Microsoft.Practices.Unity" />
    <alias alias="perThread" type="Microsoft.Practices.Unity.PerThreadLifetimeManager, Microsoft.Practices.Unity" />
    <alias alias="perHttpContext" type="YangKai.BlogEngine.Web.Mvc.HttpContextLifetimeManager, YangKai.BlogEngine.Web.Mvc" />
    <alias alias="perCallContext" type="YangKai.BlogEngine.Web.Mvc.CallContextLifeTimeManager, YangKai.BlogEngine.Web.Mvc" />

    <!--behavior-->
    <alias alias="RssBuildBehavior" type="YangKai.BlogEngine.Web.Mvc.BootStrapper.RssBuildBehavior, YangKai.BlogEngine.Web.Mvc.BootStrapper" />

    <!--common-->
    <alias alias="IUnitOfWork" type="AtomLab.Domain.Infrastructure.IUnitOfWork, AtomLab.Domain" />
    <alias alias="EFUnitOfWork" type="YangKai.BlogEngine.Infrastructure.BlogEngineContext, YangKai.BlogEngine.Infrastructure" />

    <!--services-->
    <alias alias="ICommandService" type="YangKai.BlogEngine.ICommandServices.ICommandService, YangKai.BlogEngine.ICommandServices" />
    <alias alias="CommandService" type="YangKai.BlogEngine.CommandServices.CommandService, YangKai.BlogEngine.CommandServices" />

    <container>
      <extension type="Interception"/>
      <register type="IUnitOfWork" mapTo="EFUnitOfWork" >
        <lifetime type="perHttpContext"></lifetime>
      </register>
      <register type="ICommandService" mapTo="CommandService" >
        <lifetime type="perHttpContext"></lifetime>
        <interceptor type="TransparentProxyInterceptor"/>
        <interceptionBehavior type="RssBuildBehavior"/>
      </register>
    </container>

  </unity>
</configuration>
