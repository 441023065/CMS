@using YangKai.BlogEngine.Modules.PostModule.Objects

@{
    Layout = "~/Views/Shared/_layout-whth-sidebar.cshtml";
    var channel = ViewBag.Channel as Channel;
    var group = ViewBag.Group as Group;
}

<div id="posts">
   
    <div class="breadcrumbs">
        @if (group == null)
        {
            <strong>@channel.Name</strong>
        }
        else
        {
            <a href="/@channel.Url">@channel.Name</a>
            <strong>@group.Name</strong>
        }
    </div>

    @if (YangKai.BlogEngine.Common.WebMasterCookie.IsLogin)
    {
        <div id="addpost" class="_add"><a href="/admin/postmanage/new">添加新文章</a></div>
        <div class="clear"></div>
    }
    <div data-bind="with: listViewModel, visible: State() === 'list'">
        @Html.Partial("index-box")
        @Html.Partial("index-post")
    </div>
    <div data-bind="with: detailViewModel, visible: State() === 'detail'">
        
    </div>
</div>

<script>

    var viewModel = function (isadmin) {
        var self = this;
        self.State = ko.observable('list');
        self.listViewModel = ko.observable(new listViewModel());
        self.detailViewModel = ko.observable(new detailViewModel());
        self.authorized = isadmin;

        $.sammy(function () {
            
            this.get("#!//search/:query$", function () {
                var query = this.params['query'];
                self.listViewModel().turnpages('', '', 1, 'search', query);
            });
            
            this.get("#!/:group/:page/:type/:query/?$", function () {
                var group = this.params['group'];
                var page = this.params['page'];
                var type = this.params['type'];
                var query = this.params['query'];
                self.listViewModel().turnpages('', group, page, type, query);
            });

            this.get("#!/:group/:type/:query/?$", function () {
                var group = this.params['group'];
                var type = this.params['type'];
                var query = this.params['query'];
                self.listViewModel().turnpages('', group, 1, type , query);
            });
            
            this.get("#!/:group/:page/?$", function () {
                var group = this.params['group'];
                var page = this.params['page'];
                self.listViewModel().turnpages('', group, page, '', '');
            });
            
            this.get("#!/:page/?$", function () {
                var page = this.params['page'];
                var channel = urlHelper.getChannelUrl();
                if (IsNum(page)) {
                    self.listViewModel().turnpages(channel, '', page, '', '');
                } else {
                    self.listViewModel().turnpages(channel, page, 1, '', '');
                }
            });
            
            this.get("#!/?$", function () {
                var channel = urlHelper.getChannelUrl();
                self.listViewModel().turnpages(channel, '', 1, '', '');
            });
            
        }).run();
    };

    var listViewModel = function () {
        var self = this;

        self.list = ko.observableArray();
        self.loading = ko.observable(false);

        self.TotalResults = ko.observable();
        self.Pager = ko.pager(self.TotalResults);
        self.channel = ko.observable('');
        self.group = ko.observable('');
        self.type = ko.observable('');
        self.query = ko.observable('');
        self.link = ko.computed(function () {
            var channel = self.channel();
            var group = self.group() ? '/' + self.group() : '';
            var page = self.Pager().CurrentPage()!=1 ? '/' + self.Pager().CurrentPage() : '';
            var type = self.type() ? self.type() + '/' : '';
            var query = self.query();
            return "/" + channel + "#!" + group + page + "/" + type + query;
        }, self);
        
        self.del = function (data) {
            Messenger().run(
                { progressMessage: 'Deleting data...' },
                {
                    url: "/admin/postmanage/delete/",
                    data: "id=" + data.PostId,
                    method: "post",
                    dataType: "json",
                    complete: function (context) {
                        var o = JSON.parse(context.responseText);
                        if (o.result) {
                            message.success('“#' + data.Title + '”  be moved to trash.');
                            data.PostStatus = 'Trash';
                            itemRefresh(self.list, data);
                        } else {
                            message.error(o.reason);
                        }
                    }
                }
            );
        };

        self.expand = function (entity) {
            entity.IsShowDetail = !entity.IsShowDetail;
            itemRefresh(self.list, entity);
        };

        self.Pager().CurrentPage.subscribe(function () {
            location.href = self.link();
        });
        
        self.turnpages = function (channel, group, page, type, query) {
            self.channel(channel);
            self.group(group);
            self.type(type);
            self.query(query);
            self.Pager().CurrentPage(page);
            
            self.loading(!self.loading());

            //定位到顶部
            scroll(0, 0);

            var link = '/article?';
            link += 'type=list&id=' + page;
            link += '&channelurl=' + channel;
            link += '&groupurl=' + group;
            link += '&id=' + page;
            link += '&' + type+'='+query;
            
            $.getJSON(link, function (result) {
                //若滑动效果未结束,则延迟绑定.
                if ($("nav ul li.moving_bg").is(":animated")) {
                    setTimeout(function () { self.refreshlist(result); }, 300);
                } else {
                    self.refreshlist(result);
                }
            });
        };

        self.refreshlist = function (result) {
            self.loading(!self.loading());
            self.list(result.data);
            self.TotalResults(result.count);
            ko.utils.arrayForEach(self.list(), function (data) { data.IsShowDetail = false; });
            imglazyload("#posts img");
        };
    };

    var detailViewModel = function () {
    };
</script>

<script>
    $(function () {
        var url = window.location.href;
        //TODO:印无首页page,暂时将首页跳转到/funs#!
        if ((url + "#!").indexOf('/#!') > -1) {
            window.location.href = "/funs#!";
        }
        else if (url.indexOf('#!') == -1) {
            window.location.href = window.location.href + "#!";
        }
        ko.applyBindings(new viewModel(), $("#posts")[0]);
    });
</script>