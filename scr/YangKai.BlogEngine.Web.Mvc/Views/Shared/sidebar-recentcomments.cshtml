@using YangKai.BlogEngine.Modules.PostModule.Objects
@{
    var group = ViewBag.Group as Group;
    var channel = ViewBag.Channel as Channel;
    var groupUrl = group==null?string.Empty:group.Url;
    var channelUrl = channel == null ? string.Empty : channel.Url;
}

<div class="widget" id="recentcomments">
    <h3>最新评论</h3>
    <div class="templateloading" id="div-sidebar-recentcomments-detail-loader"></div>
    <ul class="templatecontainer" data-bind="template: { name: 'recentCommentsViewModelTemplate', foreach: comments }, fadeInVisible: comments ">
    </ul>
</div>


<script type="text/javascript">
    function RecentCommentsViewModel() {
        var self = this;

        ko.bindingHandlers.fadeInVisible = {
            init: function (element) {
                fadeInVisibleFunction(element, "div-sidebar-recentcomments-detail-loader");
            }
        };

        self.comments = ko.observableArray();
        $.getJSON('/comment/recent?channelurl=@channelUrl&groupurl=@groupUrl', self.comments);
    }

    $(document).ready(function () {
        ko.applyBindings(new RecentCommentsViewModel(), document.getElementById("recentcomments"));
    });
</script>
<script type="text/html" id="recentCommentsViewModelTemplate">
    <li>
        <a href="#" data-bind="text: $data.Author, attr: { title: '《' + $data.PostTitle + '》' }"></a>
        :
        <span data-bind="text: $data.Content"></span>
    </li>
@*    <li>*@
@*    @Html.ActionLink(data.Author, "Detail", data.Post.Group.Url, string.Empty, string.Empty, "comment-" + data.CommentId, new { id = data.Post.Url }, new { title = string.Format("《{0}》", data.Post.Title) })*@
@*    : @Html.Raw(data.Content.Replace("<br />", "&nbsp;&nbsp;").SubstringChinese(200))*@
@*    </li>*@
</script>